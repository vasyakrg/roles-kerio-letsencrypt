---
- name: install letsencrypt
  apt:
    name: letsencrypt
    state: latest
  tags: ssl

- name: Kerio-connect start
  shell: service kerio-connect stop

- name: Create letsencrypt certificate
  shell: letsencrypt certonly --standalone --expand --keep-until-expiring {{ dry_run }} -m {{ lets_letsencrypt_email }} --agree-tos -d {{ item.server_name }}
  args:
    creates: "{{ lets_deploy_certpath }}/{{ item.server_name }}"
  with_items: "{{ lets_deploy_vhosts }}"
  when: item.state|default('present') != 'absent'
  tags: ssl

- name: Revoke letsencrypt certificate
  shell: certbot {{ dry_run }} revoke --cert-path "{{ lets_deploy_certpath }}/{{ item.server_name }}".crt --key-path "{{ lets_deploy_certpath }}/{{ item.server_name }}".key
  with_items: "{{ letsx_deploy_vhosts }}"
  when: item.state|default('present') == 'absent'
  tags: ssl

- name: Add letsencrypt job for cert renewal
  cron:
    name: letsencrypt_renewal
    special_time: {{ lets_monthly }}
    job: "service kerio-connect stop && certbot renew && service kerio-connect start"
  when: "{{ lets_crontab_enable }}" == 'enable'

- name: Remove letsencrypt job for cert renewal
  cron:
    name: letsencrypt_renewal
    state: absent
  when: "{{ lets_crontab_enable }}" == 'disable'

- name: Add link from letsencrypt to kerio-connect.crt
  file:
    src: "/etc/letsencrypt/live/{{ item.server_name }}/fullchain.pem"
    dest: "{{ lets_deploy_certpath }}/{{ item.server_name }}.crt"
    state: link
  with_items: "{{ lets_deploy_vhosts }}"
  when: item.state|default('present') != 'absent'

- name: Add link from letsencrypt to kerio-connect.key
  file:
    src: "/etc/letsencrypt/live/{{ item.server_name }}/privkey.pem"
    dest: "{{ lets_deploy_certpath }}/{{ item.server_name }}.key"
    state: link
  with_items: "{{ lets_deploy_vhosts }}"
  when: item.state|default('present') != 'absent'

- name: Remove link from letsencrypt to kerio-connect.crt
  file:
    path: "{{ lets_deploy_certpath }}/{{ item.server_name }}.crt"
    state: absent
  with_items: "{{ lets_deploy_vhosts }}"
  when: item.state|default('present') == 'absent'

- name: Remove link from letsencrypt to kerio-connect.key
  file:
    path: "{{ lets_deploy_certpath }}/{{ item.server_name }}.key"
    state: absent
  with_items: "{{ lets_deploy_vhosts }}"
  when: item.state|default('present') == 'absent'

- name: Kerio-connect start
  shell: service kerio-connect start
